    @model Pivec.Promotion.Data.Customer

@{
    ViewBag.Title = "Register Customer";
    
}

<h2>Register Customer</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.DealerId, "Dealership")
        </div>
        <div class="editor-field">
            @Html.DropDownList("DealerId", "Select One")
            @Html.ValidationMessageFor(model => model.DealerId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SalespersonCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SalespersonCode)
            @Html.ValidationMessageFor(model => model.SalespersonCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DriverLicenseNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DriverLicenseNumber)
            @Html.ValidationMessageFor(model => model.DriverLicenseNumber)
            @{
                if (ViewData["LicenseError"] != null)
                {
                    @Html.ValidationMessageFor(model => model.DriverLicenseNumber)
                    @ViewData["ErrorMessage"]
                }
            }
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StreetAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StreetAddress)
            @Html.ValidationMessageFor(model => model.StreetAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State, "State")
        </div>
        <div class="editor-field">
            @Html.DropDownList("State", "Select One")
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ZipCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ZipCode)
            @Html.ValidationMessageFor(model => model.ZipCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <p>
            <input type="submit" value="Create" />
            @{
                if (ViewData["PromotionError"] != null)
                {
                    @ViewData["ErrorMessage"]
                }
            }
        </p>
    </fieldset>
}
